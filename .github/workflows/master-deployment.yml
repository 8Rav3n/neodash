name: Test/Deploy Master

on:
  push:
    branches: [ master ]


jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Creating Neo4j Container
        run: |
          chmod +x ./scripts/docker-neo4j-initializer/docker-neo4j.sh
          ./scripts/docker-neo4j-initializer/docker-neo4j.sh
          sleep 30s
          chmod +x ./scripts/docker-neo4j-initializer/start-movies-db.sh
          ./scripts/docker-neo4j-initializer/start-movies-db.sh
      - run: rm -rf docs
      - run: yarn install
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          build: yarn run build
          start: yarn run dev
          wait-on: 'http://localhost:3000'
  build-s3:
    needs: build-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: rm -rf docs
      - run: yarn install
      - run: PRODUCTION=true && yarn run build
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - run: curl ${{ secrets.INDEX_HTML_DEPLOYMENT_URL }} > dist/index.html
      - run: aws s3 rm s3://neodash.graphapp.io/ --recursive && aws s3 sync dist s3://neodash.graphapp.io/ --acl public-read
  build-npm:
    needs: build-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: rm -rf docs
    - run: yarn install
    - run: PRODUCTION=true && yarn run build
    - run: curl ${{ secrets.INDEX_HTML_DEPLOYMENT_URL }} > dist/index.html
    - run: npm pack
    - run: rm -rf target
    - run: mkdir target
    - run: mv *.tgz target/
    - run: tar -xvf target/*.tgz
    - run: rm -f target/*.tgz
    - run: cp package/dist/favicon.ico package/favicon.ico
    - run: echo "${{ secrets.NEO4J_LABS_APP_KEY }}" > neo4j-labs-app.pem
    - run: echo "${{ secrets.NEO4J_LABS_APP_CERTIFICATE }}" > neo4j-labs-app.cert
    - run: npx @neo4j/code-signer --app ./package --private-key neo4j-labs-app.pem --cert neo4j-labs-app.cert --passphrase ${{ secrets.NEO4J_DESKTOP_PASSPHRASE }}
    - run: echo "${{ secrets.NEO4J_DESKTOP_CERTIFICATE }}" > neo4j_desktop.cert
    - run: npx @neo4j/code-signer --verify  --app ./package --root-cert neo4j_desktop.cert
    - run: cd package && npm pack
    - run: mv package/*.tgz .
    - run: rm -rf package
    - run: tar xvf *.tgz package
    - run: npx @neo4j/code-signer --verify  --app ./package --root-cert neo4j_desktop.cert
    - run: rm -rf package
    - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
    - name: Publish package to NPM ğŸ“¦
      run: npm publish --access public neodash*.tgz